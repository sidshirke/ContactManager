{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","deleteClickHandler","myInit","myRequest","method","Request","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","addContact","_this$state","newContact","preventDefault","abrupt","body","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","editContact","match","params","JSON","stringify","headers","Content-type","About","NotFound","test","title","then","response","App","context_Provider","HashRouter","Switch","Route","exact","path","component","Test","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f92e0ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => {\n          return contact.id !== action.payload;\n        })\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await res.json();\n    this.setState({\n      contacts: data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  // Use arrow function to access this property\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  deleteClickHandler = async (id, dispatch) => {\n    const myInit = { method: \"DELETE\" };\n    let myRequest = new Request(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    try {\n      await fetch(myRequest, myInit);\n      dispatch({\n        type: \"DELETE_CONTACT\",\n        payload: id\n      });\n    } catch (e) {\n      //Since the id is always one we cannot delete contact. Hence we catch the exception\n      // and call delete again.\n      dispatch({\n        type: \"DELETE_CONTACT\",\n        payload: id\n      });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i onClick={this.onShowClick} className=\"fa fa-sort-down\" />\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.deleteClickHandler.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fa fa-edit\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {this.state.showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <div>\n              <React.Fragment>\n                <h1 className=\"display-4 mb-2\">\n                  <span className=\"text-danger\">Contact </span>\n                  List\n                </h1>\n                {contacts.map(contact => (\n                  <Contact key={contact.id} contact={contact} />\n                ))}\n              </React.Fragment>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n\n    // const { contacts } = this.state;\n    // return (\n    //   <div>\n    //     {contacts.map(contact => (\n    //       <Contact\n    //         key={contact.id}\n    //         contact={contact}\n    //         deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n    //       />\n    //     ))}\n    //   </div>\n    // );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n      </div>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fa fa-home\" />\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fa fa-plus\" />\n              Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fa fa-question\" />\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"is-invalid\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n//import uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addContact = async (dispatch, e) => {\n    e.preventDefault();\n    //console.log(this.state);\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    // Make request\n\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      body: newContact // body data type must match \"Content-Type\" header\n    });\n    const data = await res.json();\n    newContact.id = data.id;\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: newContact\n    });\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\"> Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.addContact.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <button className=\"btn btn-secondary btn-block\">\n                    Add Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n//import uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const data = await res.json();\n    this.setState({\n      name: data.name,\n      email: data.email,\n      phone: data.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  editContact = async (dispatch, e) => {\n    e.preventDefault();\n    //console.log(this.state);\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    // Make request\n    const { id } = this.props.match.params;\n    const res = await fetch(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify(newContact),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }\n    );\n\n    const data = await res.json();\n\n    dispatch({\n      type: \"UPDATE_CONTACT\",\n      payload: data\n    });\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\"\n    });\n\n    //Redirect\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\"> Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.editContact.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <button className=\"btn btn-secondary btn-block\">\n                    Update Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div>\n      <div className=\"display-4\">Contact Manager App</div>\n      <p className=\"lead\">Simple app to manager contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404 </span> Not Found\n      </h1>\n      <p className=\"lead\">Sorry this page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}